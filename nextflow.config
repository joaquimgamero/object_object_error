/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    nf-core/sarek Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

params {
    // Workflow flags:

    // References
    genome = '75'
    my_db = 90

    // Schema validation default options
    validationFailUnrecognisedParams = false
    validationLenientMode            = true
    validationSchemaIgnoreParams     = 'genomes,igenomes_base'
    validationShowHiddenParams       = false
    validate_params                  = true
}

profiles {
    debug {
        cleanup                = false
        dumpHashes             = true
        process.beforeScript   = 'echo $HOSTNAME'
        cleanup                = false
        nextflow.enable.configProcessNamesValidation = true
    }
    conda {
        apptainer.enabled      = false
        charliecloud.enabled   = false
        conda.enabled          = true
        channels               = ['conda-forge', 'bioconda', 'defaults']
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = false
        singularity.enabled    = false
    }
    mamba {
        apptainer.enabled      = false
        charliecloud.enabled   = false
        conda.enabled          = true
        conda.useMamba         = true
        charliecloud.enabled   = false
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = false
        singularity.enabled    = false
    }
    docker {
        apptainer.enabled        = false
        charliecloud.enabled     = false
        conda.enabled            = false
        docker.enabled           = true
        podman.enabled           = false
        shifter.enabled          = false
        docker.runOptions        = '-u $(id -u):$(id -g)'
        singularity.enabled      = false
    }
    arm {
        docker.runOptions        = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    spark {
        docker.runOptions        = ''
    }
    singularity {
        apptainer.enabled      = false
        charliecloud.enabled   = false
        conda.enabled          = false
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = false
        singularity.autoMounts = true
        singularity.enabled    = true
    }
    podman {
        apptainer.enabled      = false
        charliecloud.enabled   = false
        conda.enabled          = false
        docker.enabled         = false
        podman.enabled         = true
        shifter.enabled        = false
        singularity.enabled    = false
    }
    shifter {
        apptainer.enabled      = false
        charliecloud.enabled   = false
        conda.enabled          = false
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = true
        singularity.enabled    = false
    }
    charliecloud {
        apptainer.enabled      = false
        charliecloud.enabled   = true
        conda.enabled          = false
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = false
        singularity.enabled    = false
    }
    apptainer {
        apptainer.enabled      = true
        apptainer.autoMounts   = true
        charliecloud.enabled   = false
        conda.enabled          = false
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = false
        singularity.enabled    = false
    }
    gitpod {
        executor.cpus          = 4
        executor.memory        = 8.GB
        executor.name          = 'local'
    }
}

// Set default registry for Apptainer, Docker, Podman and Singularity independent of -profile
// Will not be used unless Apptainer / Docker / Podman / Singularity are enabled
// Set to your registry if you have a mirror of containers
apptainer.registry   = 'quay.io'
docker.registry      = 'quay.io'
podman.registry      = 'quay.io'
singularity.registry = 'quay.io'

// Nextflow plugins
plugins {
    id 'nf-validation@1.1.3' // Validation of pipeline parameters and creation of an input channel from a sample sheet
}

// Load igenomes.config
includeConfig 'conf/igenomes.config'

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

// Disable process selector warnings by default. Use debug profile to enable warnings.
nextflow.enable.configProcessNamesValidation = false

manifest {
    name            = 'object_object error investigation'
    author          = """Maxime Garcia"""
    homePage        = 'https://github.com/maxulysse'
    description     = """Investigating object object error"""
    mainScript      = 'main.nf'
    nextflowVersion = '!>=23.04.0'
    version         = 'O.1dev'
    doi             = ''
}